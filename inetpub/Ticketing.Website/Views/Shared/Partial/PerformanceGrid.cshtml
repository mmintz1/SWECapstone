@model Ticketing.Framework.Models.Ticket.PerformanceVM
@{
    List<SelectListItem> selectQuantity = new List<SelectListItem>();
    var maxQuantity = Model.AvailableTickets < 9 ? Model.AvailableTickets : 8;
    
    for (int i=1; i<=maxQuantity; i++)
    {
        selectQuantity.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
    }
        
    
}
<div id="PerformanceGrid">

<div class="box" data-eventId="@Model.EventId">
    @using (Html.BeginForm("AddToCart", "Event"))
    {
    <div class="column">
        <p><b>@Model.EventName</b></p>
        <p>@Model.PerformanceDate</p>
        <p>@Model.Location</p>
    </div>
    <div class="column">
        @if (Model.Cancelled)
        {
            <p>Cancelled</p>
        }
        else if (Model.AvailableTickets == 0)
        {
            <p>Sold Out</p>
        } else {
            <p><b>Seats Available</b></p>
            <p>@Model.AvailableTickets</p>
        }
    </div>
    <div class="column">
        <p><b>Price</b></p>
        <p>@Model.Price.ToString("C")</p>
    </div>

    
    <div class="column">
        @if (Model.AvailableTickets > 0)
        {
            <p><input type="submit" id="submit" value="Add to Cart" /></p>
            <p>Quantity @Html.DropDownListFor(p => Model.Quantity, selectQuantity)</p>
        }
        else {
            <p><input type="button" value="Sold out" disabled="disabled" /></p>   
        }
        @Html.HiddenFor(p => Model.PerformanceId)
        @Html.HiddenFor(p => Model.EventName)
        @Html.HiddenFor(p => Model.PerformanceDate)
        @Html.HiddenFor(p => Model.Price)
        @Html.HiddenFor(p => Model.EventId)
        @Html.HiddenFor(p => Model.Location)
    </div>
    }
</div>
</div>
